version: "2"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    tmpfs: "/tmp"
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:6.0.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      # - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_JMX_PORT: 9101
      # KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      JVM_OPTS: -Xmx2048m -Xms2048m

  rest-proxy:
    image: confluentinc/cp-kafka-rest:6.0.0
    depends_on:
      - broker
    ports:
      - 18082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: "broker:29092"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"

  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "1883:1883"
    environment:
      RABBITMQ_ERLANG_COOKIE: "RabbitMQ-My-Cookies"
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin"
    volumes:
      - "./plugins.erl:/etc/rabbitmq/enabled_plugins"

  postgis:
    image: kartoza/postgis:11.0-2.5
    container_name: postgis4
    environment:
      POSTGRES_PASS: postgres
      POSTGRES_USER: postgres
      POSTGRES_DBNAME: smart_city
    volumes:
      - ./setup-db.sql:/docker-entrypoint-initdb.d/setup-db.sql
      #- ./postgres-data:/var/lib/postgresql/11
    ports:
     - "15432:5432"

  data-manager:
    image: keti/sc/data-manager
    depends_on:
      - broker
      - postgis
      - rest-proxy
    ports:
      - 8080:8080
    environment:
      DATASOURCE_URL: jdbc:postgresql://postgis:5432/smart_city
      DATASOURCE_SECONDARY_URL: jdbc:postgresql://postgis:5432/smart_city
      REST_PROXY_URL: http://rest-proxy:8082
      KAFKA_URL: broker:29092
      KAFKA_SECURITY_YN: N
      SECURITY_ACL_USEYN: N
      JVM_OPTS: -Xmx2048m -Xms2048m

  ingest-interface:
    image: keti/sc/ingest-interface
    depends_on:
      - broker
      - postgis
      - rest-proxy
    ports:
      - 8081:8081
      - 443:443
    environment:
      DATASOURCE_URL: jdbc:postgresql://postgis:5432/smart_city
      DATASOURCE_SECONDARY_URL: jdbc:postgresql://postgis:5432/smart_city
      KAFKA_URL: broker:29092
      KAFKA_SECURITY_YN: N
      SPRING_PROFILES_ACTIVE: local
      SECURITY_ACL_USEYN: N
      JVM_OPTS: -Xmx2048m -Xms2048m

  data-service-broker:
    image: keti/sc/data-service-broker
    depends_on:
      - broker
      - postgis
      - rest-proxy
    ports:
      - 8082:8082
    environment:
      DATASOURCE_URL: jdbc:postgresql://postgis:5432/smart_city
      DATASOURCE_SECONDARY_URL: jdbc:postgresql://postgis:5432/smart_city
      KAFKA_URL: broker:29092
      KAFKA_SECURITY_YN: N
      SECURITY_ACL_USEYN: N
      JVM_OPTS: -Xmx2048m -Xms2048m

  datacore-ui:
    image: keti/sc/datacore-ui
    depends_on:
      - broker
      - postgis
      - rest-proxy
    ports:
      - 8083:8083
    environment:
      DATASOURCE_URL: jdbc:postgresql://postgis:5432/smart_city
      DATASOURCE_SECONDARY_URL: jdbc:postgresql://postgis:5432/smart_city
      DATAMANAGER_URL: http://data-manager:8080
      INGESTINTERFACE_URL: http://ingest-interface:8081
      JVM_OPTS: -Xmx2048m -Xms2048m


  datacore-usertool:
    image: keti/sc/datacore-usertool
    depends_on:
      - broker
      - postgis
      - rest-proxy
    ports:
      - 8084:8084
    environment:
      DATASOURCE_URL: jdbc:postgresql://postgis:5432/smart_city
      DATASOURCE_SECONDARY_URL: jdbc:postgresql://postgis:5432/smart_city
      DATAMANAGER_URL: http://data-manager:8080
      DATASERVICEBROKER_URL: http://ingest-interface:8081
      GOOGLE_API_KEY: XXXXXXXXXXXXXXXXXXX-XXX_XXXXXXXXXXXXXXX
      JVM_OPTS: -Xmx2048m -Xms2048m

  push-agent:
    image: keti/sc/push-agent
    depends_on:
      - broker
      - postgis
      - rest-proxy
    environment:
      KAFKA_URL: broker:29092
      KAFKA_SECURITY_YN: N
      SECURITY_ACL_USEYN: N
      JVM_OPTS: -Xmx2048m -Xms2048m

      