CREATE SCHEMA DATA_MANAGER
    AUTHORIZATION POSTGRES;


CREATE TABLE DATA_MANAGER.DATA_MODEL_BASE
(
    ID		VARCHAR(1024),
    TYPE            VARCHAR(64) NOT NULL,
    TYPE_URI        VARCHAR(1024) NOT NULL,
    NAME	VARCHAR(100),
    DESCRIPTION     VARCHAR(500),
    DATA_MODEL      TEXT NOT NULL,
    ENABLED         BOOLEAN DEFAULT TRUE,
    CREATE_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID      VARCHAR(64),
    MODIFY_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID     VARCHAR(64),
    CONSTRAINT DATA_MODEL_BASE_PK PRIMARY KEY (ID),
    CONSTRAINT DATA_MODEL_BASE_UK01 UNIQUE (TYPE_URI)
);


-- 데이터 셋 테이블 스키마
CREATE TABLE DATA_MANAGER.DATASET_BASE
(
    ID                    VARCHAR(256) NOT NULL,
    NAME                  VARCHAR(256),
    DESCRIPTION           VARCHAR(512),
    UPDATE_INTERVAL       VARCHAR(50),
    CATEGORY              VARCHAR(4),
    PROVIDER_ORGANIZATION VARCHAR(256),
    PROVIDER_SYSTEM       VARCHAR(256),
    IS_PROCESSED          VARCHAR(256),
    OWNERSHIP             VARCHAR(32),
    KEYWORD               VARCHAR(4)[],
    LICENSE               VARCHAR(4),
    PROVIDING_API_URI     VARCHAR(512),
    RESTRICTIONS          VARCHAR(512),
    DATASET_EXTENSION     VARCHAR(16),
    DATASET_ITEMS         VARCHAR(512),
    TARGET_REGIONS        VARCHAR(512),
    SOURCE_DATASET_IDS    VARCHAR(512)[],
    DATA_STORE_URI        VARCHAR(1024)[],
    QUALITY_CHECK_ENABLED BOOLEAN,
    DATA_IDENTIFIER_TYPE  VARCHAR(64),
    DATAMODEL_ID        VARCHAR(1024),
    ENABLED               BOOLEAN      NOT NULL DEFAULT TRUE,
    STORAGE_RETENTION INTEGER,
    TOPIC_RETENTION BIGINT,
    CREATE_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID      VARCHAR(64),
    MODIFY_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID     VARCHAR(64),
    CONSTRAINT DATA_SET_BASE_PK PRIMARY KEY (ID)
);


-- Provision 서버 기본
CREATE TABLE DATA_MANAGER.PROVISION_SERVER_BASE
(
    ID                 VARCHAR(256)        NOT NULL,
    TYPE               VARCHAR(50)         NOT NULL,
    DESCRIPTION        VARCHAR(512),
    PROVISION_URI      VARCHAR(512)        NOT NULL,
    PROVISION_PROTOCOL VARCHAR(10)         NOT NULL,
    ENABLED            BOOLEAN DEFAULT 't' NOT NULL,
    PROVISION_ORDER    INTEGER   	   NOT NULL DEFAULT 1,
    CREATE_DATETIME    TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID         VARCHAR(64),
    MODIFY_DATETIME    TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID        VARCHAR(64),
    CONSTRAINT PROVISION_SERVER_BASE_PK PRIMARY KEY (ID)
);

-- 데이터 셋 흐름 기본
CREATE TABLE DATA_MANAGER.DATASET_FLOW_BASE
(
    DATASET_ID      VARCHAR(64)         NOT NULL,
    DESCRIPTION     VARCHAR(512),
    HISTORY_STORE_TYPE	VARCHAR(20)	NOT NULL,
    ENABLED         BOOLEAN DEFAULT 't' NOT NULL,
    CREATE_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID      VARCHAR(64),
    MODIFY_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID     VARCHAR(64),
    CONSTRAINT DATASET_FLOW_BASE_PK PRIMARY KEY (DATASET_ID)
);


-- 데이터 셋 흐름 서버 상세
CREATE TABLE DATA_MANAGER.DATASET_FLOW_SERVER_DETAIL
(
    DATASET_ID             VARCHAR(64)         NOT NULL,
    PROVISION_SERVER_TYPE  VARCHAR(50)         NOT NULL,
    BIG_DATA_STORAGE_TYPES VARCHAR(30),
    CONSTRAINT DATASET_FLOW_SERVER_DETAIL_PK PRIMARY KEY (DATASET_ID, PROVISION_SERVER_TYPE)
);



-- 2020-01-09
ALTER TABLE DATA_MANAGER.DATA_MODEL_BASE ADD COLUMN PROVISIONING_ID VARCHAR(64);
ALTER TABLE DATA_MANAGER.DATA_MODEL_BASE ADD COLUMN PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE;

ALTER TABLE DATA_MANAGER.DATASET_BASE ADD COLUMN PROVISIONING_ID VARCHAR(64);
ALTER TABLE DATA_MANAGER.DATASET_BASE ADD COLUMN PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE;
    
ALTER TABLE DATA_MANAGER.DATASET_FLOW_BASE ADD COLUMN PROVISIONING_ID VARCHAR(64);
ALTER TABLE DATA_MANAGER.DATASET_FLOW_BASE ADD COLUMN PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE;


-- 2020-03-19
ALTER TABLE DATA_MANAGER.DATASET_BASE ALTER COLUMN DATASET_EXTENSION TYPE VARCHAR(256);
ALTER TABLE DATA_MANAGER.DATASET_BASE ALTER COLUMN LICENSE TYPE VARCHAR(256);
ALTER TABLE DATA_MANAGER.DATASET_BASE ALTER COLUMN KEYWORD TYPE VARCHAR(256)[];
ALTER TABLE DATA_MANAGER.DATASET_BASE ALTER COLUMN CATEGORY TYPE VARCHAR(256);
ALTER TABLE DATA_MANAGER.DATASET_BASE ALTER COLUMN DATA_IDENTIFIER_TYPE TYPE VARCHAR(256);


-- 2021-07-04 접근제어(데이터셋) 관련
CREATE TABLE DATA_MANAGER.ACL_RULE
(
    ID                    VARCHAR(40) NOT NULL,
    USER_ID               VARCHAR(50),
    CLIENT_ID             VARCHAR(50),
    DATASET_ID            VARCHAR(256),
    CONDITION             VARCHAR(10) NOT NULL,
    CREATE_DATETIME       TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID            VARCHAR(64),
    MODIFY_DATETIME       TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID           VARCHAR(64),
    PROVISIONING_ID       VARCHAR(64),
    PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE,
    CONSTRAINT ACL_RULE_PKEY PRIMARY KEY (ID)
);
ALTER TABLE DATA_MANAGER.ACL_RULE RENAME COLUMN DATASET_ID TO RESOURCE_ID;
ALTER TABLE DATA_MANAGER.ACL_RULE ADD COLUMN RESOURCE_TYPE VARCHAR(10);

-- 2020-07-25
-- DATA_MODEL_BASE 테이블 DROP 후 신규 CREATE (PK 바뀜)
-- DATASET_BASE 테이블 DROP 후 신규 CREATE (데이터모델 PK 바뀜)

DROP TABLE DATA_MANAGER.DATASET_BASE;
DROP TABLE DATA_MANAGER.DATA_MODEL_BASE;

CREATE TABLE DATA_MANAGER.DATA_MODEL_BASE
(
    ID		VARCHAR(1024),
    TYPE            VARCHAR(64) NOT NULL,
    TYPE_URI        VARCHAR(1024) NOT NULL,
    NAME	VARCHAR(100),
    DESCRIPTION     VARCHAR(500),
    DATA_MODEL      TEXT NOT NULL,
    ENABLED         BOOLEAN DEFAULT TRUE,
    CREATE_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID      VARCHAR(64),
    MODIFY_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID     VARCHAR(64),
    PROVISIONING_ID	  VARCHAR(64),
    PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE,
    CONSTRAINT DATA_MODEL_BASE_PK PRIMARY KEY (ID),
    CONSTRAINT DATA_MODEL_BASE_UK01 UNIQUE (TYPE_URI)
);


-- 데이터 셋 테이블 스키마
CREATE TABLE DATA_MANAGER.DATASET_BASE
(
    ID                    VARCHAR(256) NOT NULL,
    NAME                  VARCHAR(256),
    DESCRIPTION           VARCHAR(512),
    UPDATE_INTERVAL       VARCHAR(50),
    CATEGORY              VARCHAR(256),
    PROVIDER_ORGANIZATION VARCHAR(256),
    PROVIDER_SYSTEM       VARCHAR(256),
    IS_PROCESSED          VARCHAR(256),
    OWNERSHIP             VARCHAR(32),
    KEYWORD               VARCHAR(256)[],
    LICENSE               VARCHAR(256),
    PROVIDING_API_URI     VARCHAR(512),
    RESTRICTIONS          VARCHAR(512),
    DATASET_EXTENSION     VARCHAR(256),
    DATASET_ITEMS         VARCHAR(512),
    TARGET_REGIONS        VARCHAR(512),
    SOURCE_DATASET_IDS    VARCHAR(512)[],
    DATA_STORE_URI        VARCHAR(1024)[],
    QUALITY_CHECK_ENABLED BOOLEAN,
    DATA_IDENTIFIER_TYPE  VARCHAR(256),
    DATAMODEL_ID        VARCHAR(1024),
    ENABLED               BOOLEAN      NOT NULL DEFAULT TRUE,
    STORAGE_RETENTION INTEGER,
    TOPIC_RETENTION BIGINT,
    CREATE_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID      VARCHAR(64),
    MODIFY_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID     VARCHAR(64),
    PROVISIONING_ID	  VARCHAR(64),
    PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE,
    CONSTRAINT DATA_SET_BASE_PK PRIMARY KEY (ID)
);

-- 2022-05-08
ALTER TABLE DATA_MANAGER.ACL_RULE ADD COLUMN OPERATION VARCHAR(16)[] DEFAULT '{"create", "update", "retrieve", "delete"}' NOT NULL;

-- 2022-06-11
ALTER TABLE DATA_MANAGER.ACL_RULE ALTER COLUMN CONDITION DROP NOT NULL;


CREATE SCHEMA INGEST_INTERFACE
    AUTHORIZATION POSTGRES;

-- 테이블 모델 테이블 스키마
CREATE TABLE INGEST_INTERFACE.DATA_MODEL_BASE
(
    NAMESPACE       VARCHAR(256),
    TYPE            VARCHAR(64),
    VERSION         VARCHAR(10),
    NAME            VARCHAR(100),
    DESCRIPTION     VARCHAR(500),
    DATA_MODEL      TEXT NOT NULL,
    ENABLED         BOOLEAN DEFAULT TRUE NOT NULL,
    CREATE_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID      VARCHAR(64),
    MODIFY_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID     VARCHAR(64),
    CONSTRAINT DATA_MODEL_BASE_PK PRIMARY KEY (NAMESPACE, TYPE, VERSION)
);

-- 데이터 셋 테이블 스키마
CREATE TABLE INGEST_INTERFACE.DATASET_BASE
(
    ID                    VARCHAR(256) NOT NULL,
    NAME                  VARCHAR(256),
    DESCRIPTION           VARCHAR(512),
    UPDATE_INTERVAL       VARCHAR(50),
    CATEGORY              VARCHAR(4),
    PROVIDER_ORGANIZATION VARCHAR(256),
    PROVIDER_SYSTEM       VARCHAR(256),
    IS_PROCESSED          VARCHAR(256),
    OWNERSHIP             VARCHAR(32),
    KEYWORD               VARCHAR(4)[],
    LICENSE               VARCHAR(4),
    PROVIDING_API_URI     VARCHAR(512),
    RESTRICTIONS          VARCHAR(512),
    DATASET_EXTENSION     VARCHAR(16),
    DATASET_ITEMS         VARCHAR(512),
    TARGET_REGIONS        VARCHAR(512),
    SOURCE_DATASET_IDS    VARCHAR(512)[],
    DATA_STORE_URI        VARCHAR(1024)[],
    QUALITY_CHECK_ENABLED BOOLEAN,
    DATA_IDENTIFIER_TYPE  VARCHAR(64),
    DATAMODEL_TYPE        VARCHAR(64),
    DATAMODEL_NAMESPACE   VARCHAR(256),
    DATAMODEL_VERSION     VARCHAR(10),
    ENABLED               BOOLEAN      NOT NULL DEFAULT TRUE,
    STORAGE_RETENTION INTEGER,
    TOPIC_RETENTION BIGINT,
    CREATE_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID      VARCHAR(64),
    MODIFY_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID     VARCHAR(64),
    CONSTRAINT DATA_SET_BASE_PK PRIMARY KEY (ID)
);




-- 품질 이력 테이블 스키마
CREATE TABLE INGEST_INTERFACE.VERIFICATION_HIST
(
    SEQ	BIGSERIAL  NOT NULL,
    IS_VERIFIED	BOOLEAN  NOT NULL,
    TEST_DATETIME	TIMESTAMP  NOT NULL,
    CREATE_DATETIME	TIMESTAMP  NOT NULL,
    DATASET_ID	VARCHAR(256)  NOT NULL,
    DATA_MODEL_TYPE	VARCHAR(64),
    DATA_MODEL_NAMESPACE	VARCHAR(256),
    DATA_MODEL_VERSION	VARCHAR(10),
    ENTITY_ID	VARCHAR(256),
    ERROR_CODE	VARCHAR(3),
    ERROR_CAUSE	VARCHAR(512),
    DATA	TEXT,
    CONSTRAINT VERIFICATION_HIST_PK PRIMARY KEY (SEQ)

);



-- 외부 플랫폼 인증 정보
CREATE TABLE INGEST_INTERFACE.EXTERNAL_PLATFORM_AUTHENTICATION_BASE
(
    ID	VARCHAR(256)  NOT NULL,
    NAME	VARCHAR(256)  NOT NULL,
    DESCRIPTION	VARCHAR(256) ,
    RECEPTION_IPS	VARCHAR(512)[]  NOT NULL,
    RECEPTION_DATASET_IDS	VARCHAR(512)[]  NOT NULL,
    DATA_INSTANCE_PREFIX	VARCHAR(64) ,
    RECEPTION_CLIENT_IDS	VARCHAR(512)[]  NOT NULL,
    CREATE_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID      VARCHAR(64),
    MODIFY_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID     VARCHAR(64),
    CONSTRAINT EXTERNAL_PLATFORM_AUTHENTICATION_BASE_PK PRIMARY KEY (ID)

);


-- 2020-01-09
ALTER TABLE INGEST_INTERFACE.DATA_MODEL_BASE ADD COLUMN PROVISIONING_ID VARCHAR(64);
ALTER TABLE INGEST_INTERFACE.DATA_MODEL_BASE ADD COLUMN PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE;

ALTER TABLE INGEST_INTERFACE.DATASET_BASE ADD COLUMN PROVISIONING_ID VARCHAR(64);
ALTER TABLE INGEST_INTERFACE.DATASET_BASE ADD COLUMN PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE;

-- 2020-03-19
ALTER TABLE INGEST_INTERFACE.DATASET_BASE ALTER COLUMN DATASET_EXTENSION TYPE VARCHAR(256);
ALTER TABLE INGEST_INTERFACE.DATASET_BASE ALTER COLUMN LICENSE TYPE VARCHAR(256);
ALTER TABLE INGEST_INTERFACE.DATASET_BASE ALTER COLUMN KEYWORD TYPE VARCHAR(256)[];
ALTER TABLE INGEST_INTERFACE.DATASET_BASE ALTER COLUMN CATEGORY TYPE VARCHAR(256);
ALTER TABLE INGEST_INTERFACE.DATASET_BASE ALTER COLUMN DATA_IDENTIFIER_TYPE TYPE VARCHAR(256);


-- 2021-07-03 접근제어
CREATE TABLE INGEST_INTERFACE.ACL_RULE
(
    ID                    VARCHAR(40) NOT NULL,
    USER_ID               VARCHAR(50),
    CLIENT_ID             VARCHAR(50),
    RESOURCE_ID            VARCHAR(256),
    RESOURCE_TYPE            VARCHAR(10),
    CONDITION             VARCHAR(10) NOT NULL,
    CREATE_DATETIME       TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID            VARCHAR(64),
    MODIFY_DATETIME       TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID           VARCHAR(64),
    PROVISIONING_ID       VARCHAR(64),
    PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE,
    CONSTRAINT ACL_RULE_PKEY PRIMARY KEY (ID)
);

-- 2021-07-20
-- DATA_MODEL_BASE 테이블 DROP 후 신규 CREATE (PK 바뀜)
-- DATASET_BASE 테이블 DROP 후 신규 CREATE (데이터모델 PK 바뀜)
-- VERIFICATION_HIST 테이블 DROP 후 신규 CREATE (데이터모델 PK 바뀜)

DROP TABLE INGEST_INTERFACE.DATASET_BASE;
DROP TABLE INGEST_INTERFACE.DATA_MODEL_BASE;
DROP TABLE INGEST_INTERFACE.VERIFICATION_HIST;

CREATE TABLE INGEST_INTERFACE.DATA_MODEL_BASE
(
    ID		    VARCHAR(1024),
    TYPE            VARCHAR(64) NOT NULL,
    TYPE_URI        VARCHAR(1024) NOT NULL,
    NAME            VARCHAR(100),
    DESCRIPTION     VARCHAR(500),
    DATA_MODEL      TEXT NOT NULL,
    ENABLED         BOOLEAN DEFAULT TRUE NOT NULL,
    CREATE_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID      VARCHAR(64),
    MODIFY_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID     VARCHAR(64),
    PROVISIONING_ID VARCHAR(64),
    PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE,
    CONSTRAINT DATA_MODEL_BASE_PK PRIMARY KEY (ID),
    CONSTRAINT DATA_MODEL_BASE_UK01 UNIQUE (TYPE_URI)
);

-- 데이터 셋 테이블 스키마
CREATE TABLE INGEST_INTERFACE.DATASET_BASE
(
    ID                    VARCHAR(256) NOT NULL,
    NAME                  VARCHAR(256),
    DESCRIPTION           VARCHAR(512),
    UPDATE_INTERVAL       VARCHAR(50),
    CATEGORY              VARCHAR(256),
    PROVIDER_ORGANIZATION VARCHAR(256),
    PROVIDER_SYSTEM       VARCHAR(256),
    IS_PROCESSED          VARCHAR(256),
    OWNERSHIP             VARCHAR(32),
    KEYWORD               VARCHAR(256)[],
    LICENSE               VARCHAR(256),
    PROVIDING_API_URI     VARCHAR(512),
    RESTRICTIONS          VARCHAR(512),
    DATASET_EXTENSION     VARCHAR(256),
    DATASET_ITEMS         VARCHAR(512),
    TARGET_REGIONS        VARCHAR(512),
    SOURCE_DATASET_IDS    VARCHAR(512)[],
    DATA_STORE_URI        VARCHAR(1024)[],
    QUALITY_CHECK_ENABLED BOOLEAN,
    DATA_IDENTIFIER_TYPE  VARCHAR(256),
    DATAMODEL_ID        VARCHAR(1024),
    ENABLED               BOOLEAN      NOT NULL DEFAULT TRUE,
    STORAGE_RETENTION INTEGER,
    TOPIC_RETENTION BIGINT,
    CREATE_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID      VARCHAR(64),
    MODIFY_DATETIME TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID     VARCHAR(64),
    PROVISIONING_ID VARCHAR(64),
    PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE,
    CONSTRAINT DATA_SET_BASE_PK PRIMARY KEY (ID)
);


-- 품질 이력 테이블 스키마
CREATE TABLE INGEST_INTERFACE.VERIFICATION_HIST
(
    SEQ	BIGSERIAL  NOT NULL,
    IS_VERIFIED	BOOLEAN  NOT NULL,
    TEST_DATETIME	TIMESTAMP  NOT NULL,
    CREATE_DATETIME	TIMESTAMP  NOT NULL,
    DATASET_ID	VARCHAR(256)  NOT NULL,
    DATA_MODEL_ID	VARCHAR(1024),
    ENTITY_ID	VARCHAR(256),
    ERROR_CODE	VARCHAR(3),
    ERROR_CAUSE	VARCHAR(512),
    DATA	TEXT,
    CONSTRAINT VERIFICATION_HIST_PK PRIMARY KEY (SEQ)

);

-- 2022-03-05
CREATE TABLE INGEST_INTERFACE.JSONLD_CONTEXT_BASE
(
    URL                  VARCHAR(1024) NOT NULL,
    PAYLOAD              TEXT  NOT NULL,
    REFINED_PAYLOAD         TEXT NOT NULL,
    KIND                 VARCHAR(20) NOT NULL,
    EXPIRE_DATETIME      TIMESTAMP WITH TIME ZONE NOT NULL,
    CREATE_DATETIME      TIMESTAMP WITH TIME ZONE,
    MODIFY_DATETIME      TIMESTAMP WITH TIME ZONE,
    CONSTRAINT JSONLD_CONTEXT_BASE_PK PRIMARY KEY (URL)
);


-- 2022-05-08
ALTER TABLE INGEST_INTERFACE.ACL_RULE ADD COLUMN OPERATION VARCHAR(16)[] DEFAULT '{"create", "update", "retrieve", "delete"}' NOT NULL;

-- 2022-06-11
ALTER TABLE INGEST_INTERFACE.ACL_RULE ALTER COLUMN CONDITION DROP NOT NULL;





CREATE SCHEMA DATA_SERVICE_BROKER
    AUTHORIZATION POSTGRES;

CREATE TABLE DATA_SERVICE_BROKER.DATA_MODEL_BASE
(
    NAMESPACE       VARCHAR(256),
    TYPE            VARCHAR(64),
    VERSION         VARCHAR(10),
    NAME            VARCHAR(100),
    DESCRIPTION     VARCHAR(500),
    DATA_MODEL      TEXT                     NOT NULL,
    DDL             TEXT                     NOT NULL,
    ENABLED         BOOLEAN DEFAULT TRUE,
    CREATE_DATETIME TIMESTAMP WITH TIME ZONE NOT NULL,
    CREATOR_ID      VARCHAR(64),
    MODIFY_DATETIME TIMESTAMP WITH TIME ZONE,
    MODIFIER_ID     VARCHAR(64),
    CONSTRAINT DATA_MODEL_BASE_PK PRIMARY KEY (NAMESPACE, TYPE, VERSION)
);


CREATE TABLE DATA_SERVICE_BROKER.DATASET_BASE
(
    ID                    VARCHAR(256) NOT NULL,
    NAME                  VARCHAR(256),
    DESCRIPTION           VARCHAR(512),
    UPDATE_INTERVAL       VARCHAR(50),
    CATEGORY              VARCHAR(4),
    PROVIDER_ORGANIZATION VARCHAR(256),
    PROVIDER_SYSTEM       VARCHAR(256),
    IS_PROCESSED          VARCHAR(256),
    OWNERSHIP             VARCHAR(32),
    KEYWORD               VARCHAR(4)[],
    LICENSE               VARCHAR(4),
    PROVIDING_API_URI     VARCHAR(512),
    RESTRICTIONS          VARCHAR(512),
    DATASET_EXTENSION     VARCHAR(16),
    DATASET_ITEMS         VARCHAR(512),
    TARGET_REGIONS        VARCHAR(512),
    SOURCE_DATASET_IDS    VARCHAR(512)[],
    DATA_STORE_URI        VARCHAR(1024)[],
    QUALITY_CHECK_ENABLED BOOLEAN,
    DATA_IDENTIFIER_TYPE  VARCHAR(64),
    DATAMODEL_TYPE        VARCHAR(64),
    DATAMODEL_NAMESPACE   VARCHAR(256),
    DATAMODEL_VERSION     VARCHAR(10),
    ENABLED               BOOLEAN      NOT NULL DEFAULT TRUE,
    STORAGE_RETENTION     INTEGER,
    TOPIC_RETENTION       BIGINT,
    CREATE_DATETIME       TIMESTAMP WITH TIME ZONE,
    CREATOR_ID            VARCHAR(64),
    MODIFY_DATETIME       TIMESTAMP WITH TIME ZONE,
    MODIFIER_ID           VARCHAR(64),
    CONSTRAINT DATA_SET_BASE_PK PRIMARY KEY (ID)
);


CREATE TABLE DATA_SERVICE_BROKER.DATASET_FLOW_BASE
(
    DATASET_ID         VARCHAR(64)                            NOT NULL,
    DESCRIPTION        VARCHAR(512),
    HISTORY_STORE_TYPE VARCHAR(20)                            NOT NULL,
    ENABLED            BOOLEAN                  DEFAULT 't'   NOT NULL,
    CREATE_DATETIME    TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID         VARCHAR(64),
    MODIFY_DATETIME    TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID        VARCHAR(64),
    CONSTRAINT DATASET_FLOW_BASE_PK PRIMARY KEY (DATASET_ID)
);


CREATE TABLE DATA_SERVICE_BROKER.SUBSCRIPTION_BASE
(
    ID                             VARCHAR(256) NOT NULL,
    NAME                           VARCHAR(256),
    TYPE                           VARCHAR(50),
    DESCRIPTION                    VARCHAR(500),
    WATCHED_ATTRIBUTES             VARCHAR(256)[],
    TIME_INTERVAL                  NUMERIC(16),
    Q                              VARCHAR(4000),
    GEO_Q                          TEXT,
    CSF                            VARCHAR(500),
    IS_ACTIVE                      VARCHAR(5),
    NOTIFICATION_ATTRIBUTES        VARCHAR(256)[],
    NOTIFICATION_FORMAT            VARCHAR(10),
    NOTIFICATION_ENDPOINT_URI      VARCHAR(500) NOT NULL,
    NOTIFICATION_ENDPOINT_ACCEPT   VARCHAR(50),
    NOTIFICATION_STATUS            VARCHAR(6),
    NOTIFICATION_TIME_SENT         NUMERIC(16),
    NOTIFICATION_LAST_NOTIFICATION timestamp WITH time zone,
    NOTIFICATION_LAST_FAILURE      timestamp WITH time zone,
    NOTIFICATION_LAST_SUCCESS      timestamp WITH time zone,
    EXPIRE                         timestamp WITH time zone,
    THROTTLING                     NUMERIC(16),
    TEMPORAL_Q_TIMEREL             VARCHAR(8),
    TEMPORAL_Q_TIME                timestamp WITH time zone,
    TEMPORAL_Q_END_TIME            timestamp WITH time zone,
    TEMPORAL_Q_TIME_PROPERTY       VARCHAR(50),
    STATUS                         VARCHAR(8),
    CREATE_DATETIME                timestamp WITH time zone,
    CREATOR_ID                     VARCHAR(64),
    MODIFY_DATETIME                timestamp WITH time zone,
    MODIFIER_ID                    VARCHAR(64),
    CONSTRAINT SUBSCRIPTION_BASE_PK PRIMARY KEY (ID)
);

CREATE TABLE DATA_SERVICE_BROKER.SUBSCRIPTION_ENTITIES
(
    ID              VARCHAR(256),
    SUBSCRIPTION_ID VARCHAR(256) NOT NULL,
    ID_PATTERN      VARCHAR(256),
    TYPE            VARCHAR(100) NOT NULL,
    CONSTRAINT SUBSCRIPTION_ENTITIES_FK01 FOREIGN KEY (SUBSCRIPTION_ID) REFERENCES DATA_SERVICE_BROKER.SUBSCRIPTION_BASE (ID)
);


CREATE TABLE DATA_SERVICE_BROKER.ENTITY_DATA_MODEL_BASE
(
    ID                   VARCHAR(256) NOT NULL,
    DATASET_ID           VARCHAR(256) NOT NULL,
    DATA_MODEL_NAMESPACE VARCHAR(256) NOT NULL,
    DATA_MODEL_TYPE      VARCHAR(64)  NOT NULL,
    DATA_MODEL_VERSION   VARCHAR(10)  NOT NULL,
    CREATE_DATETIME      TIMESTAMP WITH TIME ZONE,
    MODIFY_DATETIME      TIMESTAMP WITH TIME ZONE,
    CONSTRAINT ENTITY_BASE_PK PRIMARY KEY (ID)
);


CREATE TABLE DATA_SERVICE_BROKER.CSOURCE_REGISTRATION_BASE
(
    ID                         VARCHAR(256) NOT NULL,
    TYPE                       VARCHAR(100),
    NAME                       VARCHAR(256),
    DESCRIPTION                VARCHAR(500),
    OBSERVATION_INTERVAL_START TIMESTAMP WITHOUT TIME ZONE,
    OBSERVATION_INTERVAL_END   TIMESTAMP WITHOUT TIME ZONE,
    MANAGEMENT_INTERVAL_START  TIMESTAMP WITHOUT TIME ZONE,
    MANAGEMENT_INTERVAL_END    TIMESTAMP WITHOUT TIME ZONE,
    LOCATION                   GEOMETRY,
    OBSERVATION_SPACE          GEOMETRY,
    EXPIRES                    TIMESTAMP WITHOUT TIME ZONE,
    ENDPOINT                   VARCHAR(256),
    CONTEXT                    VARCHAR(256)[],
    OPERATION_SPACE            GEOMETRY,
    CONSTRAINT CSOURCE_REGISTRATION_BASE_PK PRIMARY KEY (ID)
);

CREATE TABLE DATA_SERVICE_BROKER.CSOURCE_REGISTRATION_INFO
(
    CSOURCE_REGISTRATION_INFO_ID VARCHAR(256),
    CSOURCE_REGISTRATION_BASE_ID VARCHAR(256),
    PROPERTIES                   VARCHAR(50)[],
    RELATIONSHIPS                VARCHAR(50)[],
    MODIFIED_AT                  TIMESTAMP WITHOUT TIME ZONE
);


CREATE TABLE DATA_SERVICE_BROKER.CSOURCE_REGISTRATION_ENTITY
(
    CSOURCE_REGISTRATION_BASE_ID VARCHAR(256),
    CSOURCE_REGISTRATION_INFO_ID VARCHAR(256),
    ENTITY_ID                    VARCHAR(256),
    ENTITY_ID_PATTERN            VARCHAR(256),
    ENTITY_TYPE                  VARCHAR(100)
);

-- 2020-12-27
ALTER TABLE DATA_SERVICE_BROKER.DATASET_FLOW_BASE ADD COLUMN BIG_DATA_STORAGE_TYPES VARCHAR(30);
ALTER TABLE DATA_SERVICE_BROKER.DATA_MODEL_BASE ALTER COLUMN DDL DROP NOT NULL;

-- 2020-01-09
ALTER TABLE DATA_SERVICE_BROKER.DATA_MODEL_BASE ADD COLUMN PROVISIONING_ID VARCHAR(64);
ALTER TABLE DATA_SERVICE_BROKER.DATA_MODEL_BASE ADD COLUMN PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE;

ALTER TABLE DATA_SERVICE_BROKER.DATASET_BASE ADD COLUMN PROVISIONING_ID VARCHAR(64);
ALTER TABLE DATA_SERVICE_BROKER.DATASET_BASE ADD COLUMN PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE;
    
ALTER TABLE DATA_SERVICE_BROKER.DATASET_FLOW_BASE ADD COLUMN PROVISIONING_ID VARCHAR(64);
ALTER TABLE DATA_SERVICE_BROKER.DATASET_FLOW_BASE ADD COLUMN PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE;


-- 2020-03-19
ALTER TABLE DATA_SERVICE_BROKER.DATASET_BASE ALTER COLUMN DATASET_EXTENSION TYPE VARCHAR(256);
ALTER TABLE DATA_SERVICE_BROKER.DATASET_BASE ALTER COLUMN LICENSE TYPE VARCHAR(256);
ALTER TABLE DATA_SERVICE_BROKER.DATASET_BASE ALTER COLUMN KEYWORD TYPE VARCHAR(256)[];
ALTER TABLE DATA_SERVICE_BROKER.DATASET_BASE ALTER COLUMN CATEGORY TYPE VARCHAR(256);
ALTER TABLE DATA_SERVICE_BROKER.DATASET_BASE ALTER COLUMN DATA_IDENTIFIER_TYPE TYPE VARCHAR(256);


-- 2020-03-21
ALTER TABLE DATA_SERVICE_BROKER.ENTITY_DATA_MODEL_BASE ALTER COLUMN DATASET_ID DROP NOT NULL;

-- 2021-06-27
ALTER TABLE DATA_SERVICE_BROKER.SUBSCRIPTION_BASE ADD COLUMN NOTIFICATION_ENDPOINT_NOTIFIER_INFO VARCHAR(1024);
ALTER TABLE DATA_SERVICE_BROKER.SUBSCRIPTION_BASE ADD COLUMN NOTIFICATION_ENDPOINT_RECEIVER_INFO VARCHAR(1024);

-- 2021-07-03 접근제어
CREATE TABLE DATA_SERVICE_BROKER.ACL_RULE
(
    ID                    VARCHAR(40) NOT NULL,
    USER_ID               VARCHAR(50),
    CLIENT_ID             VARCHAR(50),
    DATASET_ID            VARCHAR(256),
    CONDITION             VARCHAR(10) NOT NULL,
    CREATE_DATETIME       TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID            VARCHAR(64),
    MODIFY_DATETIME       TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID           VARCHAR(64),
    PROVISIONING_ID       VARCHAR(64),
    PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE,
    CONSTRAINT ACL_RULE_PKEY PRIMARY KEY (ID)
);

ALTER TABLE DATA_SERVICE_BROKER.ACL_RULE RENAME DATASET_ID TO RESOURCE_ID;
ALTER TABLE DATA_SERVICE_BROKER.ACL_RULE ADD COLUMN RESOURCE_TYPE VARCHAR (10) ;




CREATE TABLE DATA_SERVICE_BROKER.SERVICE_REGISTRATION_BASE
(
    ID            VARCHAR(256),
    TYPE        VARCHAR(64),
    NAME        VARCHAR(100),
    DESCRIPTION        VARCHAR(500),
    INFORMATION        TEXT    NOT NULL,
    CREATE_DATETIME    TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID        VARCHAR(64),
    MODIFY_DATETIME     TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID         VARCHAR(64),
    CONSTRAINT SERVICE_REGISTRATION_BASE_PK PRIMARY KEY (ID)
);


CREATE TABLE DATA_SERVICE_BROKER.SERVICE_EXECUTION_BASE
(
    ID            VARCHAR(256),
    SERVICE_ID        VARCHAR(256),
    TYPE        VARCHAR(64),
    CREATE_DATETIME    TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID        VARCHAR(64),
    MODIFY_DATETIME     TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID         VARCHAR(64),
    CONSTRAINT SERVICE_EXECUTION_BASE_PK PRIMARY KEY (ID, SERVICE_ID)
);

CREATE TABLE DATA_SERVICE_BROKER.SERVICE_EXECUTION_DETAIL
(
    ID            VARCHAR(256),
    SERVICE_ID        VARCHAR(256),
    EXECUTION_ID    VARCHAR(256),
    NAME        VARCHAR(256),
    ENTITY_ID        VARCHAR(256),
    ENTITY_TYPE        VARCHAR(64),
    TYPE        VARCHAR(64),
    INPUT        TEXT,
    STATUS        VARCHAR(20),
    CREATE_DATETIME    TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    CREATOR_ID        VARCHAR(64),
    MODIFY_DATETIME     TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    MODIFIER_ID         VARCHAR(64),
    CONSTRAINT SERVICE_EXECUTION_DETAIL_PK PRIMARY KEY (ID, SERVICE_ID, EXECUTION_ID)
);

-- 2020-07-25
-- DATA_MODEL_BASE 테이블 DROP 후 신규 CREATE (PK 바뀜)
-- DATASET_BASE 테이블 DROP 후 신규 CREATE (데이터모델 PK 바뀜)
-- ENTITY_DATA_MODEL_BASE 테이블 DROP 후 신규 CREATE (데이터모델 PK 바뀜)

DROP TABLE DATA_SERVICE_BROKER.DATASET_BASE;
DROP TABLE DATA_SERVICE_BROKER.DATA_MODEL_BASE;
DROP TABLE DATA_SERVICE_BROKER.ENTITY_DATA_MODEL_BASE;

CREATE TABLE DATA_SERVICE_BROKER.DATA_MODEL_BASE
(
    ID		    VARCHAR(1024),
    TYPE            VARCHAR(64)	  NOT NULL,
    TYPE_URI        VARCHAR(1024) NOT NULL,
    NAME            VARCHAR(100),
    DESCRIPTION     VARCHAR(500),
    DATA_MODEL      TEXT                     NOT NULL,
    ENABLED         BOOLEAN DEFAULT TRUE,
    CREATE_DATETIME TIMESTAMP WITH TIME ZONE NOT NULL,
    CREATOR_ID      VARCHAR(64),
    MODIFY_DATETIME TIMESTAMP WITH TIME ZONE,
    MODIFIER_ID     VARCHAR(64),
    PROVISIONING_ID VARCHAR(64),
    PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE,
    CONSTRAINT DATA_MODEL_BASE_PK PRIMARY KEY (ID),
    CONSTRAINT DATA_MODEL_BASE_UK01 UNIQUE (TYPE_URI)
);


CREATE TABLE DATA_SERVICE_BROKER.DATASET_BASE
(
    ID                    VARCHAR(256) NOT NULL,
    NAME                  VARCHAR(256),
    DESCRIPTION           VARCHAR(512),
    UPDATE_INTERVAL       VARCHAR(50),
    CATEGORY              VARCHAR(256),
    PROVIDER_ORGANIZATION VARCHAR(256),
    PROVIDER_SYSTEM       VARCHAR(256),
    IS_PROCESSED          VARCHAR(256),
    OWNERSHIP             VARCHAR(32),
    KEYWORD               VARCHAR(256)[],
    LICENSE               VARCHAR(256),
    PROVIDING_API_URI     VARCHAR(512),
    RESTRICTIONS          VARCHAR(512),
    DATASET_EXTENSION     VARCHAR(256),
    DATASET_ITEMS         VARCHAR(512),
    TARGET_REGIONS        VARCHAR(512),
    SOURCE_DATASET_IDS    VARCHAR(512)[],
    DATA_STORE_URI        VARCHAR(1024)[],
    QUALITY_CHECK_ENABLED BOOLEAN,
    DATA_IDENTIFIER_TYPE  VARCHAR(256),
    DATAMODEL_ID          VARCHAR(1024),
    ENABLED               BOOLEAN      NOT NULL DEFAULT TRUE,
    STORAGE_RETENTION     INTEGER,
    TOPIC_RETENTION       BIGINT,
    CREATE_DATETIME       TIMESTAMP WITH TIME ZONE,
    CREATOR_ID            VARCHAR(64),
    MODIFY_DATETIME       TIMESTAMP WITH TIME ZONE,
    MODIFIER_ID           VARCHAR(64),
    PROVISIONING_ID	  VARCHAR(64),
    PROVISIONING_DATETIME TIMESTAMP WITH TIME ZONE,
    CONSTRAINT DATA_SET_BASE_PK PRIMARY KEY (ID)
);


CREATE TABLE DATA_SERVICE_BROKER.ENTITY_DATA_MODEL_BASE
(
    ID                   VARCHAR(256) NOT NULL,
    DATASET_ID           VARCHAR(256),
    DATA_MODEL_ID	 VARCHAR(1024) NOT NULL,
    DATA_MODEL_TYPE      VARCHAR(64)  NOT NULL,
    CREATE_DATETIME      TIMESTAMP WITH TIME ZONE,
    MODIFY_DATETIME      TIMESTAMP WITH TIME ZONE,
    CONSTRAINT ENTITY_BASE_PK PRIMARY KEY (ID)
);

-- 2021-08-08
ALTER TABLE DATA_SERVICE_BROKER.SUBSCRIPTION_ENTITIES ADD COLUMN TYPE_URI VARCHAR(1024);

-- 2021-08-21
ALTER TABLE DATA_SERVICE_BROKER.SUBSCRIPTION_BASE ADD COLUMN DATASET_IDS VARCHAR(512)[];

-- 2021-09-07
ALTER TABLE DATA_SERVICE_BROKER.DATA_MODEL_BASE ADD COLUMN CREATED_STORAGE_TYPES VARCHAR(128)[];

-- 2021-09-24
ALTER TABLE DATA_SERVICE_BROKER.DATA_MODEL_BASE ADD COLUMN STORAGE_METADATA TEXT;

-- 2021-11-15
ALTER TABLE DATA_SERVICE_BROKER.SUBSCRIPTION_BASE ADD COLUMN CONTEXT VARCHAR(4000)[];

-- 2021-11-20
ALTER TABLE DATA_SERVICE_BROKER.CSOURCE_REGISTRATION_BASE ADD COLUMN SUPPORTED_AGGREGATION_METHOD VARCHAR(50)[];
ALTER TABLE DATA_SERVICE_BROKER.CSOURCE_REGISTRATION_BASE ADD COLUMN SCOPE VARCHAR(50)[];
ALTER TABLE DATA_SERVICE_BROKER.CSOURCE_REGISTRATION_BASE ADD COLUMN SCOPE_DATA_TYPE VARCHAR(20);

-- 2022-03-05
CREATE TABLE DATA_SERVICE_BROKER.JSONLD_CONTEXT_BASE
(
    URL                  VARCHAR(1024) NOT NULL,
    PAYLOAD              TEXT  NOT NULL,
    REFINED_PAYLOAD	     TEXT NOT NULL,
    KIND        	     VARCHAR(20) NOT NULL,
    EXPIRE_DATETIME      TIMESTAMP WITH TIME ZONE NOT NULL,
    CREATE_DATETIME      TIMESTAMP WITH TIME ZONE,
    MODIFY_DATETIME      TIMESTAMP WITH TIME ZONE,
    CONSTRAINT JSONLD_CONTEXT_BASE_PK PRIMARY KEY (URL)
);

-- 2022-05-08
ALTER TABLE DATA_SERVICE_BROKER.ACL_RULE ADD COLUMN OPERATION VARCHAR(16)[] DEFAULT '{"create", "update", "retrieve", "delete"}' NOT NULL;

-- 2022-06-11
ALTER TABLE DATA_SERVICE_BROKER.ACL_RULE ALTER COLUMN CONDITION DROP NOT NULL;



CREATE SCHEMA DATACORE_UI
    AUTHORIZATION POSTGRES;


-- 코드 그룹 기본 테이블 스키마
CREATE TABLE DATACORE_UI.CODE_GROUP_BASE
(
    CODE_GROUP_ID       VARCHAR(10) NOT NULL,
    CODE_GROUP_NAME     VARCHAR(50) NOT NULL,
    DESCRIPTION         VARCHAR(500),
    ENABLED             BOOLEAN NOT NULL DEFAULT TRUE,
    CREATE_DATETIME     TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATOR_ID          VARCHAR(64),
    MODIFY_DATETIME     TIMESTAMP WITHOUT TIME ZONE,
    MODIFIER_ID         VARCHAR(64),
    CONSTRAINT CODE_GROUP_BASE_PK PRIMARY KEY (CODE_GROUP_ID)
);


-- 코드 기본 테이블 스키마
CREATE TABLE DATACORE_UI.CODE_BASE
(
    CODE_GROUP_ID       VARCHAR(10) NOT NULL,
    CODE_ID             VARCHAR(30) NOT NULL,
    CODE_NAME           VARCHAR(50) NOT NULL,
    SORT_ORDER          NUMERIC(5) NOT NULL,
    ENABLED             BOOLEAN NOT NULL DEFAULT TRUE,
    DESCRIPTION         VARCHAR(500),
    CREATE_DATETIME     TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATOR_ID          VARCHAR(64),
    MODIFY_DATETIME     TIMESTAMP WITHOUT TIME ZONE,
    MODIFIER_ID         VARCHAR(64),
    CONSTRAINT CODE_BASE_PK PRIMARY KEY (CODE_GROUP_ID, CODE_ID),
    CONSTRAINT CODE_BASE_FK01 FOREIGN KEY (CODE_GROUP_ID)
    REFERENCES DATACORE_UI.CODE_GROUP_BASE (CODE_GROUP_ID) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

CREATE INDEX CODE_BASE_IX01
    ON DATACORE_UI.CODE_BASE USING btree
    (CODE_GROUP_ID);


-- 메뉴 기본 테이블 스키마
CREATE TABLE DATACORE_UI.MENU_BASE
(
    ID                  VARCHAR(20) NOT NULL,
    NAME                VARCHAR(50) NOT NULL,
    URL                 VARCHAR(100),
    UP_MENU_ID          VARCHAR(20),
    SORT_ORDER          NUMERIC(5),
    ENABLED             BOOLEAN NOT NULL DEFAULT TRUE,
    LEVEL               NUMERIC(5) NOT NULL,
    LANG_CD		VARCHAR(5) NOT NULL DEFAULT 'en'
    CREATE_DATETIME     TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATOR_ID          VARCHAR(64),
    MODIFY_DATETIME     TIMESTAMP WITHOUT TIME ZONE,
    MODIFIER_ID         VARCHAR(64),
    CONSTRAINT MENU_BASE_PK PRIMARY KEY (ID, LANG_CD)
);

-- 메뉴 역할 기본 테이블 스키마
CREATE TABLE DATACORE_UI.MENU_ROLE_BASE
(
    ID                  VARCHAR(20) NOT NULL,
    NAME                VARCHAR(50) NOT NULL,
    DESCRIPTION         VARCHAR(500),
    ENABLED             BOOLEAN NOT NULL DEFAULT TRUE,
    CREATE_DATETIME     TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATOR_ID          VARCHAR(64),
    MODIFY_DATETIME     TIMESTAMP WITHOUT TIME ZONE,
    MODIFIER_ID         VARCHAR(64),
    CONSTRAINT MENU_ROLE_BASE_PK PRIMARY KEY (ID)
);

-- 메뉴 역할 관계 기본 테이블 스키마
CREATE TABLE DATACORE_UI.MENU_ROLE_RELATION_BASE
(
    MENU_ID             VARCHAR(20) NOT NULL,
    MENU_ROLE_ID        VARCHAR(30) NOT NULL,
    CREATE_DATETIME     TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATOR_ID          VARCHAR(64),
    MODIFY_DATETIME     TIMESTAMP WITHOUT TIME ZONE,
    MODIFIER_ID         VARCHAR(64),
    CONSTRAINT MENU_ROLE_RELATION_BASE_PK PRIMARY KEY (MENU_ID, MENU_ROLE_ID),
    CONSTRAINT MENU_ROLE_RELATION_BASE_FK01 FOREIGN KEY (MENU_ID)
    REFERENCES DATACORE_UI.MENU_BASE (ID) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT MENU_ROLE_RELATION_BASE_FK02 FOREIGN KEY (MENU_ROLE_ID)
    REFERENCES DATACORE_UI.MENU_ROLE_BASE (ID) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);




CREATE SCHEMA DATACORE_USERTOOL
    AUTHORIZATION POSTGRES;


-- Schema of WIDGET_CHART_BASE table
CREATE TABLE DATACORE_USERTOOL.WIDGET_CHART_BASE
(
    WIDGET_ID		VARCHAR(36) NOT NULL,
    USER_ID			VARCHAR(32) NOT NULL,
    CHART_TYPE		VARCHAR(32) NOT NULL,
    CHART_ORDER		NUMERIC(5),
    CHART_SIZE		VARCHAR(100),
    DATA_TYPE		VARCHAR(10),
    CHART_TITLE		VARCHAR(32),
    CHART_X_NAME	VARCHAR(20),
    CHART_Y_NAME	VARCHAR(20),
    Y_AXIS_RANGE	VARCHAR(20),
    UPDATE_INTERVAL	NUMERIC(20),
    REALTIME_UPDATE_ENABLED	BOOLEAN DEFAULT FALSE,
    CHART_ATTRIBUTE	VARCHAR(100) NOT NULL,
    SEARCH_CONDITION	VARCHAR(1000),
    CREATE_DATETIME	TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT NOW(),
    MODIFY_DATETIME	TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT WIDGET_CHART_BASE_PK PRIMARY KEY (WIDGET_ID, USER_ID)
);

-- 2022-01-27
DROP TABLE DATACORE_USERTOOL.WIDGET_CHART_BASE;

-- Schema of WIDGET_CHART_BASE table
CREATE TABLE DATACORE_USERTOOL.WIDGET_CHART_BASE
(
    WIDGET_ID		VARCHAR(36) NOT NULL,
    USER_ID			VARCHAR(32) NOT NULL,
    DASHBOARD_ID	VARCHAR(36) NOT NULL,
    CHART_TYPE		VARCHAR(32) NOT NULL,
    CHART_ORDER		NUMERIC(5),
    CHART_SIZE		VARCHAR(100),
    DATA_TYPE		VARCHAR(10),
    CHART_TITLE		VARCHAR(32),
    CHART_X_NAME	VARCHAR(20),
    CHART_Y_NAME	VARCHAR(20),
    Y_AXIS_RANGE	VARCHAR(20),
    UPDATE_INTERVAL	NUMERIC(20),
    REALTIME_UPDATE_ENABLED	BOOLEAN DEFAULT FALSE,
    CHART_ATTRIBUTE	VARCHAR(100) NOT NULL,
    SEARCH_CONDITION	VARCHAR(1000),
    MAP_SEARCH_CONDITION_ID	VARCHAR(36),
    FILE 			BYTEA,
    EXTENTION1		VARCHAR(100),
    EXTENTION2		VARCHAR(100),
    CREATE_DATETIME	TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT NOW(),
    MODIFY_DATETIME	TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT WIDGET_CHART_BASE_PK PRIMARY KEY (WIDGET_ID, USER_ID, DASHBOARD_ID)
);

-- Schema of DASHBOARD_BASE table
CREATE TABLE DATACORE_USERTOOL.DASHBOARD_BASE
(
	DASHBOARD_ID	VARCHAR(36) NOT NULL,
	USER_ID			VARCHAR(32) NOT NULL,
	DASHBOARD_NAME	VARCHAR(32) NOT NULL,
	CREATE_DATETIME	TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT NOW(),
    MODIFY_DATETIME	TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT DASHBOARD_BASE_PK PRIMARY KEY (DASHBOARD_ID, USER_ID)
);

-- Schema of MAP_SEARCH_CONDITION_BASE table
CREATE TABLE DATACORE_USERTOOL.MAP_SEARCH_CONDITION_BASE
(
	MAP_SEARCH_CONDITION_ID	VARCHAR(36) NOT NULL,
	MAP_SEARCH_CONDITION_TYPE	VARCHAR(10) NOT NULL,
	USER_ID					VARCHAR(32) NOT NULL,
	MAP_SEARCH_CONDITION_NAME	VARCHAR(32) NOT NULL,
	SEARCH_CONDITION		VARCHAR(2500),
	SUBSCRIPTION_CONDITION	VARCHAR(1000),
	CREATE_DATETIME	TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT NOW(),
    MODIFY_DATETIME	TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT MAP_SEARCH_CONDITION_BASE_PK PRIMARY KEY (MAP_SEARCH_CONDITION_ID, MAP_SEARCH_CONDITION_TYPE, USER_ID)
);






-- Provision 서버 초기 값
INSERT INTO DATA_MANAGER.PROVISION_SERVER_BASE (ID, TYPE, DESCRIPTION, PROVISION_URI, PROVISION_PROTOCOL, ENABLED, PROVISION_ORDER, CREATE_DATETIME, CREATOR_ID, MODIFY_DATETIME, MODIFIER_ID) VALUES ('dataservicebroker-1', 'dataServiceBroker', NULL, 'http://data-service-broker:8082', 'http', true, 1, now(), NULL, now(), NULL);
INSERT INTO DATA_MANAGER.PROVISION_SERVER_BASE (ID, TYPE, DESCRIPTION, PROVISION_URI, PROVISION_PROTOCOL, ENABLED, PROVISION_ORDER, CREATE_DATETIME, CREATOR_ID, MODIFY_DATETIME, MODIFIER_ID) VALUES ('ingestinterface-1', 'ingestInterface', NULL, 'http://ingest-interface:8081', 'http', true, 1, now(), NULL, now(), NULL);




-- Code Group 초기 값
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC001', 'DataModel AttributeType', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC002', 'DataModel AccessMode', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC003', 'Property ValueType', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC004', 'GeoProperty ValueType', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC005', 'Relationship ValueType', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC006', 'ObjectMember ValueType', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC007', 'Category', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC008', 'DataSet Data Type', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC009', 'Keywords', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC010', 'License', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC011', 'Data Identifier Type', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC012', 'Data Store Uri', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC013', 'Entity History Store Type', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC014', 'DataSet Flow Provision Server Type', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC015', 'Big Data Storage Type', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC016', 'Provision Target Server Type', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC017', 'Provision Protocol', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC018', 'Verification Error Code', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC019', 'ArrayObject ValueType', '', true, now(), 'admin');
INSERT INTO datacore_ui.CODE_GROUP_BASE (CODE_GROUP_ID, CODE_GROUP_NAME, DESCRIPTION, ENABLED, CREATE_DATETIME, CREATOR_ID) VALUES('DC101', '여부 코드', '', true, now(), 'admin');


-- Code 초기 값
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC001', 'Property', 'Property', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC001', 'GeoProperty', 'GeoProperty', 2, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC001', 'Relationship', 'Relationship', 3, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC002', 'Read-only', 'Read-only', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC002', 'Read/Write', 'Read/Write', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC003', 'String', 'String', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC003', 'Integer', 'Integer', 2, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC003', 'Double', 'Double', 3, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC003', 'Boolean', 'Boolean', 4, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC003', 'Object', 'Object', 5, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC003', 'Date', 'Date', 6, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC003', 'ArrayString', 'ArrayString', 7, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC003', 'ArrayInteger', 'ArrayInteger', 8, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC003', 'ArrayDouble', 'ArrayDouble', 9, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC003', 'ArrayBoolean', 'ArrayBoolean', 10, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC003', 'ArrayObject', 'ArrayObject', 11, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC004', 'GeoJson', 'GeoJson', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC005', 'String', 'String', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC006', 'String', 'String', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC006', 'Integer', 'Integer', 2, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC006', 'Double', 'Double', 3, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC006', 'Boolean', 'Boolean', 4, true, '', now(), 'admin');
--INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC006', 'Object', 'Object', 5, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC006', 'Date', 'Date', 6, true, '', now(), 'admin');
--INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC006', 'GeoJson', 'GeoJson', 7, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC006', 'ArrayString', 'ArrayString', 8, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC006', 'ArrayInteger', 'ArrayInteger', 9, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC006', 'ArrayDouble', 'ArrayDouble', 10, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC006', 'ArrayBoolean', 'ArrayBoolean', 11, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC007', '교통', '교통', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC007', '환경', '환경', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC008', '원천데이터', '원천데이터', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC008', '가공데이터', '가공데이터', 1, true, '', now(), 'admin');
--INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC009', '', '', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC010', 'CC BY', 'CC BY', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC010', 'CC BY-SA', 'CC BY-SA', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC010', 'CC BY-ND', 'CC BY-ND', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC010', 'CC BY-NC', 'CC BY-NC', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC010', 'CC BY-NC-SA', 'CC BY-NC-SA', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC010', 'CC BY-NC-ND', 'CC BY-NC-ND', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC011', 'GS1', 'GS1', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC011', 'Proprietary', 'Proprietary', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC012', 'Kafka Topic', 'Kafka Topic', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC012', 'Hive URI', 'Hive URI', 2, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC012', 'Postgres URI', 'Postgres URI', 3, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC012', 'Hbase URI', 'Hbase URI', 4, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC013', 'partial', 'partial', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC013', 'full', 'full', 2, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC013', 'all', 'all', 3, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC014', 'dataServiceBroker', 'dataServiceBroker', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC015', 'hive', 'hive', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC015', 'hbase', 'hbase', 2, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC015', 'rdb', 'rdb', 3, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC016', 'dataServiceBroker', 'dataServiceBroker', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC016', 'ingestInterface', 'ingestInterface', 2, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC017', 'http', 'http', 1, true, '', now(), 'admin');
--INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC017', 'kafka', 'kafka', 2, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC018', '001', '필수 파라미터 부재', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC018', '002', '유효하지 않은 파라미터', 2, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC018', '003', '유효하지 않은 파라미터 타입', 3, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC018', '004', '유효하지 않은 파라미터 범위(숫자)', 4, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC018', '005', '유효하지 않은 파라미터 값(enum)', 5, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC019', 'String', 'String', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC019', 'Integer', 'Integer', 2, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC019', 'Double', 'Double', 3, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC019', 'Date', 'Date', 4, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC019', 'Boolean', 'Boolean', 5, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC101', 'true', '예', 1, true, '', now(), 'admin');
INSERT INTO datacore_ui.CODE_BASE(CODE_GROUP_ID, CODE_ID, CODE_NAME, SORT_ORDER, ENABLED, DESCRIPTION, CREATE_DATETIME, CREATOR_ID) VALUES('DC101', 'false', '아니오', 2, true, '', now(), 'admin');

-- Menu
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_100', 'kr', '데이터 모델 관리', '/dataModels', null, 1, true, 1, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_200', 'kr', '데이터 셋 관리', '/datasetView', null, 2, true, 1, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_300', 'kr', '데이터 접근 제어 관리', '/accessControl', null, 3, true, 1, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_400', 'kr', 'Provision 서버 관리', '/provisionServerView', null, 4, true, 1, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_500', 'kr', '외부 플랫폼 인증 관리', '/externalPlatformView', null, 5, true, 1, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_600', 'kr', '품질 모니터링', '/verificationHistoryView', null, 6, true, 1, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_700', 'kr', '시스템 관리', '/', null, 7, true, 1, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_701', 'kr', '코드 관리', '/codeManageView', 'DATACORE_700', 1, true, 2, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_702', 'kr', '메뉴 관리', '/menuManageView', 'DATACORE_700', 2, true, 2, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_703', 'kr', '메뉴 권한 관리', '/menuRoleManageView', 'DATACORE_700', 3, true, 2, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_704', 'kr', '데이터 접근 제어 관리', '/accessControl', 'DATACORE_700', 4, true, 2, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_100', 'en', 'Data Model', '/dataModels', null, 1, true, 1, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_200', 'en', 'Dataset', '/datasetView', null, 2, true, 1, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_400', 'en', 'Provision Server', '/provisionServerView', null, 4, true, 1, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_500', 'en', 'Data Source Platform', '/externalPlatformView', null, 5, true, 1, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_600', 'en', 'Data Validation', '/verificationHistoryView', null, 6, true, 1, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_700', 'en', 'Setting', '/', null, 7, true, 1, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_701', 'en', 'Code', '/codeManageView', 'DATACORE_700', 1, true, 2, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_702', 'en', 'Menu', '/menuManageView', 'DATACORE_700', 2, true, 2, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_703', 'en', 'Menu Auth', '/menuRoleManageView', 'DATACORE_700', 3, true, 2, now(), 'admin');
INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_704', 'en', 'Access Control', '/accessControl', 'DATACORE_700', 4, true, 2, now(), 'admin');